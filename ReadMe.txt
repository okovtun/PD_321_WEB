https://www.youtube.com/playlist?list=PLeqyOOqxeiIOdpQWJH3tfE-pQUci7sYuj

//https://www.google.com/search?q=%D0%95%D1%81%D1%82%D1%8C+%D0%BB%D0%B8+29+%D1%84%D0%B5%D0%B2%D1%80%D0%B0%D0%BB%D1%8F+%D0%B2+2100+%D0%B3%D0%BE%D0%B4%D1%83&rlz=1C1FKPE_enGE1117GE1117&oq=%D0%95%D1%81%D1%82%D1%8C+%D0%BB%D0%B8+29+%D1%84%D0%B5%D0%B2%D1%80%D0%B0%D0%BB%D1%8F+%D0%B2+2100+%D0%B3%D0%BE%D0%B4%D1%83&gs_lcrp=EgZjaHJvbWUyBggAEEUYOTIHCAEQIRigAdIBCTE1NTg4ajFqN6gCALACAA&sourceid=chrome&ie=UTF-8
//https://ru.wikipedia.org/wiki/%D0%92%D0%B8%D1%81%D0%BE%D0%BA%D0%BE%D1%81%D0%BD%D1%8B%D0%B9_%D0%B3%D0%BE%D0%B4#:~:text=1600%20%D0%B8%202000%20%D0%B3%D0%BE%D0%B4%D1%8B%20%E2%80%94%20%D0%B2%D0%B8%D1%81%D0%BE%D0%BA%D0%BE%D1%81%D0%BD%D1%8B%D0%B5,%D0%B3%D0%BE%D0%B4%2C%20%D1%81%D0%BB%D0%B5%D0%B4%D1%83%D1%8E%D1%89%D0%B8%D0%BC%20%D0%B1%D1%83%D0%B4%D0%B5%D1%82%202028%20%D0%B3%D0%BE%D0%B4.

URI:
https://developer.mozilla.org/ru/docs/Web/URI

PHP configuration:
https://www.php.net/manual/en/install.windows.iis.php
https://learn.microsoft.com/en-us/iis/configuration/system.webserver/fastcgi/

PHP VS plugin:
https://disk.yandex.ru/d/rSET6R3YotXaVA

TOREAD:
https://www.rfc-editor.org/rfc/rfc1945
https://datatracker.ietf.org/doc/html/rfc1945

TODO:
1. Отобразить Дисциплины и преподавателей:
	-какие дисциплины может вести выбанный преподаватель;
	-какие преподаватели могу вести выбранную дисциплину;
2. При выборе дисциплины должны отображаться не только преподаватели, но и их количество;
3. В отдельной ветке оптимизировать проект;
4. Попробовать прикрутить сортировку по разным столбикам таблицы;
5. Написать CRUD для преподавателей (CREATE, UPDATE);
6. Для выбранного препода отобразить дисциплины, которые он ведет,
   и для каждой группы отобразить студентов, которые в ней обучаются;

DONE:
1. Сохранить группу в файл;
2. Загрузить группу из файла;

DONE:
1. Форма 'result.php' должна отправлять результат тестирования на E-mail респондента по его желанию;
2. На форму 'result.php' добавить кнопку 'Завершить тестирование',
   которая перенаправит пользователя на страницу 'login.php';

DONE:
Реализовать Quiz при помощи AJAX.

DONE:
1. Добавить кнопку 'Prev', которая переходит на предыдущий вопрос;
2. Посчитать количество правильных и неправильных ответов;
3. Пользователя, дату, время и результат сохранить в файл на сервере;

DONE:
1. Пользователь загружает файл типа 201 RAW.txt: https://github.com/okovtun/PD_212/tree/master/Inheritance/Files,
   а программа создает из него 2 файла вида '201 ready.txt' и '201.dhcpd'.
   Для проверки созданные файлы нужно вывести на страницу;
2. Файл 201 ready.txt вывести в виде таблицы;	DONE
3. *Скопировать картинку при помощи файловых операций;
4. *На страницу загружена картинка, ее необходимо созранить в файл;

TODO:
1. В проекте UploadFile должно востпроизводиться видео;
2. Добить проект UploadMultipleFiles;

DONE:
Добить отправку почты.

DONE:
1. На странице должен отображаться только один вопрос, 
   также нужно переключение на следующий и предыдуший вопрос.

TODO:
1. Оганичить доступ в папку 'inc';

DONE:
2. Написать тест на 5 вопросов. В начале теста пользователь вводит свое имя и E-mail;

DONE:
Добить проверку имени на форме регистрации.

Товарищи, посмотрите еще эту RFC:https://datatracker.ietf.org/doc/html/rfc6265

PHP Arrays:
https://www.php.net/manual/en/ref.array.php
https://www.deepl.com/en/translator


DONE:
1. Создать массив из пяти элементов, и произвести над ним следующие дкйствия:
	-заполнить случайными числами;
	-найти сумму и среднее-арифметическое элементов массива;
	-найти минимальное и максимальное значение в массиве;
2. Есть массив из лесяти элементов, заполненный слечайными числами в диапазоне от 25 до 30.
   Необходимо найти поторяющиеся значения в этом массиве, вывести их на экран, 
   и вывести на экран количество повторений каждого значения;
3. При решить все эти задачи еще и с двумерными массивами;

DONE:
1. Почему функции НЕ поддерживают перегрузку;
2. Написать рекурсивную функцию Fibonacci(), которая выводит на экран ряд Фибоначчи, до определенного предела;
3. Написать функцию dec_to_bin(), которая принимает десятичное число, и возвращает его двоичный аналог;
4. Написать функцию dec_to_hex(), которая принимает десятиное число, и возвращает его шестнадцатеричный аналог;

DONE:
1. Найти константы, показывающие минимальное и максимальное значение для FLOAT;

DONE:
Скачать PHP binaries;

Introduction to Cloud Computing:
Ознакомиться с продуктами Azure и их ценообразованем.
https://hip.hosting/
https://nuxt.cloud/virtual-servers

ReactLifeCycle:
https://stackoverflow.com/questions/62185425/why-is-console-log-logging-twice-in-react-js
https://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/
https://react.dev/learn/react-developer-tools

https://stackoverflow.com/questions/71835697/create-react-app-dependency-version-issues-with-react-18

TODO:
Обеспечить возможность выбирать тест: HardwarePC, Основы программирования, ООП, и т.д.
Сделайте несколько тестов по 3-4 вопроса, и при запуске страницы пользователь должен выбрать, что он хочет сдавать.

DONE:
1. Отобразить количество верных и неверных ответов пользователя;

DONE:
Добить Tasklist

DONE:
Добить 'Pagination' при помощи 'PROPS'.

DONE:
Добить Pagination.

DONE:
Реализовать конвертор чисел из двоичной СС в Десятичную и Шестнадцатеричную; 

DONE:
Создать отдельный репозиторий для Галлереи и захостить эту 
Галерею на GitHub таким образом, чтобы она открывалась в браузере прямо из GitHub;
https://create-react-app.dev/docs/deployment/

DONE:
Написать компоненты которые:
1. Вычисляет факториал числа;
2. Выводит ряд Фибоначчи до указанного числа;

DONE:
Вынести <header>...</header> в компонент 'Header'.

----------------------------------------------------------------

VDS

TODO:
1. Для каждого преподавателя отобразить дисциплины, которые он может вести, и количество этих дисциплин;	DONE
2. Для каждого направления отобразить какие дисциплины на нем преподаются, и количество этих дисциплин;		DONE
	-----------------------------------------------
3. Обеспечить возможность добавления дисциплины преподавателю:
	- На страничке 'Edit' так же должен отображаться список дисциплин;
	- На страницу 'Edit' нужно добавить кнопку 'Добавить', которая будет добавлять дисциплину выбранному преподавателю;
4. У каждого преподавателя должно отображаться фото на его странице;

DONE:
Все то же самое сделать со студентами;

DONE:
Отобразить OfficeAssignment и Courses на странице 'Detail' для выбранного инструктора.

TODO:
1. Добавить кнопку "Сбросить все фильтры";	DONE
2. Для каждого преподавателя нужно отобразить вместо даты рождения и даты трудоустройства возраст и опыт работы;
3. Кнопки 'Edit' и 'Delete' должны отображаться только на странице 'Details';	DONE
4. Сладеть Pagination, с возможностью выбора количества вхожений на странице 5, 10, 15; DONE
5. На странице 'Details' выбранного преподавателя должен отображаться список дисциплин, которые может читать этот преподаватель;
------------------------------
6. На страницу с дисциплинами добавить выпадающий список, в котором можно выбрать ID дисциплины, и будет отображена выбранная дисциплина;
7. На страницу с дисциплинами добавить выпадающий список, в котором можно выбрать количество уроков, и будут отображены соответствующие дисциплины;
8. Добавить фильтр по названию дисциплины;
------------------------------

DONE:
1. На главную страницу 'MovieApp' добавить выпадающий список, который позволит задать количество фильмов на страницу;	DONE
2. Data delimiters on CreateMovie;	Schmidt DONE
3. Скачать Базу и развернуть ее на сервере:
	https://github.com/okovtun/PD_212_DBMS/blob/master/DATA/Export/PD_212.bacpac
4. Создать BlazorWebApp и подключить к нему скачанную Базу;

DONE:
1. Добавить механизм отметки выполненных заданий;			DONE
2. Выполненные задания должны отображаться в списке правее;	DONE
3. Добавить время назначения/выполнения задания;			DONE

TODO:
1. На странице Digits реализовать конвертор из Двоичной системы счиления в Десятичную;			DONE
2. На странице Digits реализовать конвертор из Двоичной системы счиления в Шестнадцатеричную;	DONE
3. У пользователя должна быть возможность выбирать разрядность двоичного числа: 1, 2 либо 4 Байта;

DONE:
1. Изменить шаг добавления счетчика;
2. Страница 'Digits' должна заработать;

TODO:
1. Сделать выпадающий список из доступных песенок;	(BackEnd)
2. Настроить автоматическое воспроизведение с YouTube, или любого другого онлайн ресурса.
3. Применить кастомный шрифт;		DONE
4. Сделать выпадающий список из кастомных шрифтов;	(BackEnd)

DONE:
1. По истечении времени страница должна воспроизводить какой-либо звук, выбанный пользователем.
   Пользователь дожен иметь вохможность выбирать локальный файл, либо ссылку на YouTube;

TODO:
1. Обработать блок с днями;	DONE
2. В отдельной ветке попробовать вынести повторяющийся код в отдельные функции;	DONE
3. Решить проблему времени;	DONE
4. Вынести в отдельную функцию код, который определяет позицию добавляемого элемента;

DONE:
0. Год должен убираться со страницы через родительский элемент;
1. Применить DOM к таймеру, а именно, единицы времени должны появляться и изчезать при необходимости.

DONE:
1. Решить проблему с часовым поясом;	DONE
2. Добавить дату;						DONE
3. Решить проблему с датой;
Написать countdownTimer (таймер обратного отсчета) который считает сколько осталось времени до времени выбранного пользователем.


DONE:
1. Обеспечить плавную смену катринок с Луной и Солнышком;	DONE
2. Задержку, с которой будет пропадать картинка должен выбирать ползователь;

DONE:
1. Пользователь вводит число, и программа говорит - это палиндром, или нет;
2. Вычислить факториал числа, введенного с клавиатуры;
3. Возвести указанное число в указанную степень;
4. Вывести на экран ряд Фибоначчи до указанного предела;
5. Вывести на экран заданное количество членов из ряда Фибоначчи;
6. Вывести на экран ряд простых чисел до указанного предела;
7. Вывести на экран заданное количество простых чисел;